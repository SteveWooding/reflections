What happens when you initialize a repository? Why do you need to do it?

    git creates a place where the meta data of the repository will be stored
    (in .git directory).

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    It is a temporary place to collect files ready for the next commit to the
    repository. It allows you to precisely control which files are to be included
    in the next commit. This is helpful if a logical change is spread over multiple
    files and should be committed together under a single commit message.

How can you use the staging area to make sure you have one commit per logical
change?

    See what files are there by doing a git status command. Check to see exactly
    what code is changing with the git diff --staged command and make sure it's
    only one logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

    When you want to try out adding an experimental feature to you code or create
    a different version for some purpose, e.g. a port for a different OS.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
